nexus repository manager是一个强大的容器类软件，可以存储各种构建好的文件。最常用的用法就是当成maven的仓库和docker的仓库。
由于国内网速限制，maven项目在编译时，从外面下载组件时很慢，可以把组件下载好后上传到NRM,后面使用到相应组件只要到NRM上下载即可。
同理，docker images也可以。

安装部署：
	下载nexus-3.14.0-04-unix.tar.gz包
tar xf nexus-3.14.0-04-unix.tar.gz -C /data/nexus

#同时到nexus官网下载systemctl启动脚本
[Unit]
Description=nexus service
After=network.target
  
[Service]
Type=forking
LimitNOFILE=65536
ExecStart=/opt/nexus/bin/nexus start   #此处改成nexus的目录位置
ExecStop=/opt/nexus/bin/nexus stop
User=nexus
Restart=on-abort
  
[Install]
WantedBy=multi-user.target

#修改配置文件
cd /data/nexus/bin
vim nexus.vmoptions\

-Xms1200M
-Xmx1200M
-XX:MaxDirectMemorySize=2G
-XX:+UnlockDiagnosticVMOptions
-XX:+UnsyncloadClass
-XX:+LogVMOutput
-XX:LogFile=/data/nexus/data/log/jvm.log   #指定日志文件位置
-XX:-OmitStackTraceInFastThrow
-Djava.net.preferIPv4Stack=true
-Dkaraf.home=.
-Dkaraf.base=.
-Dkaraf.etc=etc/karaf
-Djava.util.logging.config.file=etc/karaf/java.util.logging.properties
-Dkaraf.data=/data/nexus/data  #指定数据文件位置，数据文件下会自动生成一个log目录，下面有nexus.log等日志文件，所以把jvm.log指定到当前
-Djava.io.tmpdir=../sonatype-work/nexus3/tmp  #指定临时文件位置
-Dkaraf.startLocalConsole=false

systemctl start nexus  启动之后，要过10分钟左右才能真正启动服务。如果nexus.log没有错误都是正常的

#打开ip:8081端口，默认用户名和密码为admin/admin123
  设置-->repository-->create repository -->docker(hostd) 建立docker repository
#打开设置，建立docker的repo，设置端口，如5000
  ##配置http和https的端口。本次配置http端口为5000
  ##在Force basic authentication处启用匿名pull。
	###设置了匿名pull之后，还需要在security处设置annomous的相关权限之后，才可以让docker仓库允许未登陆时pull镜像			
  ##就可以在物理机上看到监听了5000端口

docker配置：
	在/etc/docker/daemon.json
	"insecure-registries": ["ip:50000"]  #insecure表示使用http协议
	"disable-legacy-registry": true  #docker repo有v1和v2，此为禁用v1，不然在login的时候登陆的为v1
	
systemctl restart docker



